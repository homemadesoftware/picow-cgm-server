# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore picow-cgm-server.sln
    
    - name: Build
      run: dotnet build  picow-cgm-server.sln --no-restore
      
    - name: Publish
      run: dotnet publish --configuration Release --no-restore --self-contained true --runtime linux-arm --output ./publish

    - name: Kill previously running instance on Raspberry Pi
      uses: appleboy/ssh-action@master
      continue-on-error: true
      with:
        host: ${{ secrets.RASPBERRY_PI_IP }}
        port: ${{ secrets.RASPBERRY_PI_PORT }}
        username: ${{ secrets.RASPBERRY_PI_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: sudo systemctl stop picow-cgm-server.service
          
    - name: Copy published files to Raspberry Pi
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.RASPBERRY_PI_IP }}
        port: ${{ secrets.RASPBERRY_PI_PORT }}
        username: ${{ secrets.RASPBERRY_PI_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "./publish/"
        target: "~/cgmserver"

    - name: Set permission, register as a service and start
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.RASPBERRY_PI_IP }}
        port: ${{ secrets.RASPBERRY_PI_PORT }}
        username: ${{ secrets.RASPBERRY_PI_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          chmod +x ~/cgmserver/publish/picow-cgm-server
          echo "[Unit]
          Description=My .NET Core Application

          [Service]
          ExecStart=/home/pi/cgmserver/publish/picow-cgm-server
          Restart=always
          RestartSec=10  
          SyslogIdentifier=picow-cgm-server
          User=pi  # Replace with your user

          [Install]
          WantedBy=multi-user.target" | sudo tee /etc/systemd/system/picow-cgm-server.service
          sudo chmod 644 /etc/systemd/system/picow-cgm-server.service
          sudo systemctl start picow-cgm-server.service
          sudo systemctl enable picow-cgm-server.service

          